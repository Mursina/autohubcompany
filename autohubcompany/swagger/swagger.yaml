openapi: 3.0.0
info:
  title: Flask Shopping Cart API
  description: A Flask application for managing a shopping cart.
  version: 1.0.0
servers:
- url: http://localhost:8080
paths:
  /products:
    get:
      summary: Get an overview of all available products.
      operationId: products_get
      responses:
        "200":
          description: A list of products.
      x-openapi-router-controller: auto_hub.controllers.default_controller
    post:
      summary: Add one or more products to the database.
      operationId: products_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductList'
        required: true
      responses:
        "201":
          description: Products added successfully.
      x-openapi-router-controller: auto_hub.controllers.default_controller
  /products/{product_id}:
    get:
      summary: Get details of a specific product.
      operationId: products_product_id_get
      parameters:
      - name: product_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Product info.
      x-openapi-router-controller: auto_hub.controllers.default_controller
  /cart:
    get:
      summary: Get the items in the shopping cart.
      operationId: cart_get
      parameters:
      - name: user_id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: The current shopping cart.
      x-openapi-router-controller: auto_hub.controllers.default_controller
    post:
      summary: Add a product to the shopping cart.
      operationId: cart_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cart_body'
        required: true
      responses:
        "201":
          description: Product added to the cart successfully.
      x-openapi-router-controller: auto_hub.controllers.default_controller
    delete:
      summary: Remove an entry from the shopping cart.
      operationId: cart_delete
      parameters:
      - name: cart_id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "204":
          description: Product removed from the cart.
      x-openapi-router-controller: auto_hub.controllers.default_controller
    patch:
      summary: Update the quantity of a product in the cart.
      description: This endpoint allows you to update the quantity of a product in
        the user's cart.
      operationId: cart_patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_cart'
        required: true
      responses:
        "200":
          description: Successfully updated the cart item.
        "400":
          description: Bad request. Invalid input.
        "404":
          description: Cart item not found.
      x-openapi-router-controller: auto_hub.controllers.default_controller
  /order:
    post:
      summary: Place an order for the products in the shopping cart.
      operationId: order_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order_body'
        required: true
      responses:
        "201":
          description: Order placed successfully.
      x-openapi-router-controller: auto_hub.controllers.default_controller
components:
  schemas:
    user_body:
      type: array
      items:
        type: string
    Product:
      type: object
      properties:
        part_id:
          type: integer
        name:
          type: string
        price:
          type: number
        brand:
          type: string
        compatibility:
          type: string
        quantity:
          type: integer
        category:
          type: string
    ProductList:
      type: array
      items:
        $ref: '#/components/schemas/Product'
    order_body:
      type: object
      properties:
        delivery_date:
          type: string
          format: date-time
        user_id:
          type: integer
        updated_cart:
          type: array
          items:
            $ref: '#/components/schemas/order_body_updated_cart'
    cart_body:
      type: object
      properties:
        user_id:
          type: integer
        product_id:
          type: integer
        quantity:
          type: integer
    update_cart:
      type: array
      items:
        $ref: '#/components/schemas/order_body_updated_cart'
    order_body_updated_cart:
      type: object
      properties:
        cart_id:
          type: integer
          description: The ID of the cart item.
        quantity:
          type: integer
          description: The quantity for the cart item.

